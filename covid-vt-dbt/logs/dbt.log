

============================== 2022-01-25 01:05:28.515001 | aec9e497-eb3f-477e-8068-dccc1488090b ==============================
01:05:28.515001 [info ] [MainThread]: Running with dbt=1.0.1
01:05:28.515001 [debug] [MainThread]: running dbt with arguments Namespace(record_timing_info=None, debug=None, log_format=None, write_json=None, use_colors=None, printer_width=None, warn_error=None, version_check=None, partial_parse=None, single_threaded=False, use_experimental_parser=None, static_parser=None, profiles_dir='C:\\Users\\dkhyu\\.dbt', send_anonymous_usage_stats=None, fail_fast=None, event_buffer_size=None, project_dir=None, profile=None, target=None, vars='{}', log_cache_events=False, project_name='covid-project', skip_profile_setup=False, defer=None, state=None, cls=<class 'dbt.task.init.InitTask'>, which='init', rpc_method=None)
01:05:28.515001 [debug] [MainThread]: Tracking: tracking
01:05:28.529957 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001FDA06B9970>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001FDA06B9B80>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001FDA06B98E0>]}
01:05:28.530954 [info ] [MainThread]: Creating dbt configuration folder at C:\Users\dkhyu\.dbt
01:05:28.530954 [debug] [MainThread]: Starter project path: c:\users\dkhyu\documents\portfolio_projects\covid-vt\covid-vt-dbt\venv\lib\site-packages\dbt\include\starter_project
01:05:31.795392 [info ] [MainThread]: Profile covid-project written to C:\Users\dkhyu\.dbt\profiles.yml using target's sample configuration. Once updated, you'll be able to start developing with dbt.
01:05:31.795392 [info ] [MainThread]: 
Your new dbt project "covid-project" was created!

For more information on how to configure the profiles.yml file,
please consult the dbt documentation here:

  https://docs.getdbt.com/docs/configure-your-profile

One more thing:

Need help? Don't hesitate to reach out to us via GitHub issues or on Slack:

  https://community.getdbt.com/

Happy modeling!

01:05:31.796607 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001FDA035C340>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001FDA035C040>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001FDA035C370>]}


============================== 2022-01-25 01:11:00.816719 | d3f54edc-cc8f-4f9a-9cc6-760e2516dbd1 ==============================
01:11:00.816719 [info ] [MainThread]: Running with dbt=1.0.1
01:11:00.817715 [debug] [MainThread]: running dbt with arguments Namespace(record_timing_info=None, debug=None, log_format=None, write_json=None, use_colors=None, printer_width=None, warn_error=None, version_check=None, partial_parse=None, single_threaded=False, use_experimental_parser=None, static_parser=None, profiles_dir='C:\\Users\\dkhyu\\.dbt', send_anonymous_usage_stats=None, fail_fast=None, event_buffer_size=None, project_dir=None, profile=None, target=None, vars='{}', log_cache_events=False, config_dir=False, defer=None, state=None, cls=<class 'dbt.task.debug.DebugTask'>, which='debug', rpc_method=None)
01:11:00.817715 [debug] [MainThread]: Tracking: tracking
01:11:00.834670 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001864EB2B940>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001864EB2B550>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001864EB2B2E0>]}
01:11:00.864591 [debug] [MainThread]: Executing "git --help"
01:11:00.879551 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
01:11:00.879551 [debug] [MainThread]: STDERR: "b''"
01:11:00.880547 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001864A20ADF0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001864EC35C70>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001864EC35670>]}


============================== 2022-01-25 01:13:27.319694 | 1aac39a7-a49c-4e67-905e-89c2f909e3dc ==============================
01:13:27.319694 [info ] [MainThread]: Running with dbt=1.0.1
01:13:27.320691 [debug] [MainThread]: running dbt with arguments Namespace(record_timing_info=None, debug=None, log_format=None, write_json=None, use_colors=None, printer_width=None, warn_error=None, version_check=None, partial_parse=None, single_threaded=False, use_experimental_parser=None, static_parser=None, profiles_dir='C:\\Users\\dkhyu\\.dbt', send_anonymous_usage_stats=None, fail_fast=None, event_buffer_size=None, project_dir=None, profile=None, target=None, vars='{}', log_cache_events=False, config_dir=False, defer=None, state=None, cls=<class 'dbt.task.debug.DebugTask'>, which='debug', rpc_method=None)
01:13:27.320691 [debug] [MainThread]: Tracking: tracking
01:13:27.338643 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D9C984B9A0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D9C984B070>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D9C984B340>]}
01:13:27.367567 [debug] [MainThread]: Executing "git --help"
01:13:27.381529 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
01:13:27.381529 [debug] [MainThread]: STDERR: "b''"
01:13:27.382526 [debug] [MainThread]: Acquiring new postgres connection "debug"
01:13:27.382526 [debug] [MainThread]: Using postgres connection "debug"
01:13:27.382526 [debug] [MainThread]: On debug: select 1 as id
01:13:27.382526 [debug] [MainThread]: Opening a new connection, currently in state init
01:13:27.403469 [debug] [MainThread]: SQL status: SELECT 1 in 0.02 seconds
01:13:27.404467 [debug] [MainThread]: On debug: Close
01:13:27.405465 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D9C9948AF0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D9C9948100>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x000001D9C9948EE0>]}
01:13:27.549646 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2022-01-25 01:20:24.272574 | c8636b7d-0360-40c5-bc24-025cbbe9b476 ==============================
01:20:24.272574 [info ] [MainThread]: Running with dbt=1.0.1
01:20:24.272574 [debug] [MainThread]: running dbt with arguments Namespace(record_timing_info=None, debug=None, log_format=None, write_json=None, use_colors=None, printer_width=None, warn_error=None, version_check=None, partial_parse=None, single_threaded=False, use_experimental_parser=None, static_parser=None, profiles_dir='C:\\Users\\dkhyu\\.dbt', send_anonymous_usage_stats=None, fail_fast=None, event_buffer_size=None, project_dir=None, profile=None, target=None, vars='{}', log_cache_events=False, config_dir=False, defer=None, state=None, cls=<class 'dbt.task.debug.DebugTask'>, which='debug', rpc_method=None)
01:20:24.272574 [debug] [MainThread]: Tracking: tracking
01:20:24.290526 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000220D215B9D0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000220D215B070>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000220D215B760>]}
01:20:24.322440 [debug] [MainThread]: Executing "git --help"
01:20:24.336402 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
01:20:24.336402 [debug] [MainThread]: STDERR: "b''"
01:20:24.337400 [debug] [MainThread]: Acquiring new postgres connection "debug"
01:20:24.337400 [debug] [MainThread]: Using postgres connection "debug"
01:20:24.338397 [debug] [MainThread]: On debug: select 1 as id
01:20:24.338397 [debug] [MainThread]: Opening a new connection, currently in state init
01:20:24.359343 [debug] [MainThread]: SQL status: SELECT 1 in 0.02 seconds
01:20:24.360339 [debug] [MainThread]: On debug: Close
01:20:24.361337 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000220D2258DC0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000220D22580A0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000220D2258BB0>]}
01:20:24.504951 [debug] [MainThread]: Connection 'debug' was properly closed.


============================== 2022-01-25 01:20:29.278828 | 5892dedf-d7d5-4235-ae5f-ed2b9d8edaaf ==============================
01:20:29.278828 [info ] [MainThread]: Running with dbt=1.0.1
01:20:29.278828 [debug] [MainThread]: running dbt with arguments Namespace(record_timing_info=None, debug=None, log_format=None, write_json=None, use_colors=None, printer_width=None, warn_error=None, version_check=None, partial_parse=None, single_threaded=False, use_experimental_parser=None, static_parser=None, profiles_dir='C:\\Users\\dkhyu\\.dbt', send_anonymous_usage_stats=None, fail_fast=None, event_buffer_size=None, project_dir=None, profile=None, target=None, vars='{}', log_cache_events=False, config_dir=False, defer=None, state=None, cls=<class 'dbt.task.debug.DebugTask'>, which='debug', rpc_method=None)
01:20:29.278828 [debug] [MainThread]: Tracking: tracking
01:20:29.296751 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'start', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000279CBA0B9A0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000279CBA0B070>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000279CBA0B340>]}
01:20:29.327669 [debug] [MainThread]: Executing "git --help"
01:20:29.340635 [debug] [MainThread]: STDOUT: "b"usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]\n           [--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]\n           [-p | --paginate | -P | --no-pager] [--no-replace-objects] [--bare]\n           [--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]\n           [--super-prefix=<path>] [--config-env=<name>=<envvar>]\n           <command> [<args>]\n\nThese are common Git commands used in various situations:\n\nstart a working area (see also: git help tutorial)\n   clone     Clone a repository into a new directory\n   init      Create an empty Git repository or reinitialize an existing one\n\nwork on the current change (see also: git help everyday)\n   add       Add file contents to the index\n   mv        Move or rename a file, a directory, or a symlink\n   restore   Restore working tree files\n   rm        Remove files from the working tree and from the index\n\nexamine the history and state (see also: git help revisions)\n   bisect    Use binary search to find the commit that introduced a bug\n   diff      Show changes between commits, commit and working tree, etc\n   grep      Print lines matching a pattern\n   log       Show commit logs\n   show      Show various types of objects\n   status    Show the working tree status\n\ngrow, mark and tweak your common history\n   branch    List, create, or delete branches\n   commit    Record changes to the repository\n   merge     Join two or more development histories together\n   rebase    Reapply commits on top of another base tip\n   reset     Reset current HEAD to the specified state\n   switch    Switch branches\n   tag       Create, list, delete or verify a tag object signed with GPG\n\ncollaborate (see also: git help workflows)\n   fetch     Download objects and refs from another repository\n   pull      Fetch from and integrate with another repository or a local branch\n   push      Update remote refs along with associated objects\n\n'git help -a' and 'git help -g' list available subcommands and some\nconcept guides. See 'git help <command>' or 'git help <concept>'\nto read about a specific subcommand or concept.\nSee 'git help git' for an overview of the system.\n""
01:20:29.341636 [debug] [MainThread]: STDERR: "b''"
01:20:29.342629 [debug] [MainThread]: Acquiring new postgres connection "debug"
01:20:29.342629 [debug] [MainThread]: Using postgres connection "debug"
01:20:29.342629 [debug] [MainThread]: On debug: select 1 as id
01:20:29.342629 [debug] [MainThread]: Opening a new connection, currently in state init
01:20:29.365568 [debug] [MainThread]: SQL status: SELECT 1 in 0.02 seconds
01:20:29.365568 [debug] [MainThread]: On debug: Close
01:20:29.366569 [debug] [MainThread]: Sending event: {'category': 'dbt', 'action': 'invocation', 'label': 'end', 'context': [<snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000279CBB08AF0>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000279CBB08100>, <snowplow_tracker.self_describing_json.SelfDescribingJson object at 0x00000279CBB08EE0>]}
01:20:29.486551 [debug] [MainThread]: Connection 'debug' was properly closed.
